/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&mt { flavor = "balanced"; };

&lt { flavor = "hold-preferred"; };

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    macros {
        align_left: AlignLeft {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp A>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "ALIGNLEFT";
        };

        align_right: align_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp D>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "ALIGN_RIGHT";
        };

        align_top: align_top {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp W>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "ALIGN_TOP";
        };

        align_bottom: align_bottom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "ALIGN_BOTTOM";
        };

        align_vertical: align_vertical {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "ALIGN_VERTICAL";
        };

        align_horizontal: align_horizontal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp H>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "ALIGN_HORIZONTAL";
        };

        detach_instance: detach_instance {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LCTRL>,
                <&macro_tap>,
                <&kp B>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LCTRL>;

            label = "DETACH_INSTANCE";
        };

        toggle_UI: toggle_UI {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BACKSLASH>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "TOGGLE_UI";
        };

        paste_to_replace: paste_to_replace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT &kp LCTRL>,
                <&macro_tap>,
                <&kp R>,
                <&macro_release>,
                <&kp LEFT_SHIFT &kp LCTRL>;

            label = "PASTE_TO_REPLACE";
        };

        ungroup: ungroup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp BACKSPACE>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "UNGROUP";
        };

        screenshot: screenshot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN &kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp S>,
                <&macro_release>,
                <&kp LEFT_WIN &kp LEFT_SHIFT>;

            label = "SCREENSHOT";
        };

        figma_AI: figma_AI {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp K>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "FIGMA_AI";
        };

        copy_properties: copy_properties {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LCTRL>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_ALT &kp LCTRL>;

            label = "COPY_PROPERTIES";
        };

        comment: comment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp K &kp C>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "COMMENT";
        };

        uncomment: uncomment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp K &kp U>,
                <&macro_release>,
                <&kp LCTRL>;

            label = "UNCOMMENT";
        };

        row_height: row_height {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp H &kp O &kp H>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "ROW_HEIGHT";
        };

        column_width: column_width {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp H &kp O &kp W>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "COLUMN_WIDTH";
        };

        switch: switch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp S &kp W &kp I &kp T &kp C &kp H &kp ENTER>;

            label = "SWITCH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE              &kp N1   &kp N2          &kp N3            &kp N4     &kp N5                                           &kp N6     &kp N7   &kp N8             &kp N9         &kp N0    &to 5
&mt C_PREVIOUS C_NEXT  &kp Q    &kp W           &kp E             &kp R      &kp T                                            &kp Y      &kp U    &kp I              &kp O          &kp P     &kp BSPC
&kp LEFT_SHIFT         &lt 4 A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &lt 6 F    &kp G                                            &kp H      &kp J    &mt RIGHT_SHIFT K  &kp L          &kp SEMI  &kp SQT
&kp LEFT_SHIFT         &kp Z    &kp X           &kp C             &kp V      &kp B            &kp C_PLAY_PAUSE    &kp K_MUTE  &kp N      &kp M    &kp COMMA          &kp DOT        &kp FSLH  &kp RSHFT
                                &kp LGUI        &kp DELETE        &lt 7 TAB  &lt 1 BACKSLASH  &mt LCTRL RET       &kp SPACE   &mo RAISE  &kp TAB  &row_height        &column_width
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        lower_layer {
            display-name = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans          &kp F1            &kp F2            &kp F3          &kp F4          &kp F5                               &kp F6          &kp F7             &kp F8           &kp F9        &kp F10         &kp F11
&figma_AI       &kp PRINTSCREEN   &detach_instance  &kp UP_ARROW    &kt LEFT_SHIFT  &paste_to_replace                    &kp AT_SIGN     &kp DOUBLE_QUOTES  &kp SQT          &kp DOLLAR    &kp GRAVE       &kp HASH
&kp LEFT_SHIFT  &kp LCTRL         &kp LEFT_ARROW    &kp DOWN_ARROW  &kp RIGHT       &kp DELETE                           &kp AMPERSAND   &kp QUESTION       &kp EXCLAMATION  &kp MINUS     &kp UNDERSCORE  &kp PIPE
&kp LEFT_SHIFT  &copy_properties  &uncomment        &kp ESCAPE      &comment        &ungroup           &trans    &trans  &kp EQUAL       &kp PLUS           &kp MINUS        &kp ASTERISK  &kp CARET       &trans
                                  &trans            &trans          &trans          &trans             &trans    &trans  &kp LEFT_SHIFT  &trans             &trans           &trans
            >;

            sensor-bindings =
                <&inc_dec_kp UP_ARROW DOWN_ARROW>,
                <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        coding_numpad {
            display-name = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2          &bt BT_SEL 3           &bt BT_SEL 4                    &trans         &trans        &trans        &trans        &trans       &trans
&trans      &kp PIPE          &kp HASH           &kp HOME              &kp END                &trans                          &kp PERIOD     &kp N7        &kp N8        &kp N9        &kp PERCENT  &trans
&trans      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SLASH                       &kp BACKSPACE  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0       &kp BSPC
&trans      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LESS_THAN         &kp GREATER_THAN       &kp EQUAL     &trans    &trans  &kp COMMA      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOLLAR   &trans
                              &trans             &trans                &trans                 &trans        &trans    &trans  &trans         &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };

        left_numpad {
            bindings = <
&trans  &trans  &trans        &trans        &trans          &trans                              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &none   &kp N7        &kp N8        &kp N9          &kp BACKSPACE                       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &none   &kp NUMBER_4  &kp N5        &kp NUMBER_6    &kp N0                              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3    &kp PERCENT    &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans        &trans        &kp LEFT_SHIFT  &kp PERIOD     &kp COMMA    &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans          &trans  &trans  &kp NUMBER_3  &trans     &trans                             &trans         &trans  &trans  &trans  &trans  &to 0
&kp TAB         &trans  &trans  &trans        &trans     &trans                             &trans         &trans  &trans  &trans  &trans  &trans
&kp ESCAPE      &trans  &trans  &trans        &trans     &trans                             &trans         &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &trans  &trans  &trans        &trans     &trans     &trans       &trans     &trans         &trans  &trans  &trans  &trans  &trans
                        &trans  &switch       &kp LCTRL  &kp SPACE  &kp SPACE    &kp ENTER  &kp BACKSPACE  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        layer_6 {
            bindings = <
&trans  &trans              &trans   &trans         &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans              &trans   &kp LEFT_ALT   &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LA(LEFT_SHIFT)  &kp TAB  &kp BACKSPACE  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans              &trans   &trans         &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                            &trans   &trans         &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans              &trans            &trans         &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans              &kp LS(UP_ARROW)  &trans         &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp LS(LEFT_ARROW)  &kp LS(DOWN)      &kp LS(RIGHT)  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans              &trans            &trans         &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans              &trans            &trans         &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
